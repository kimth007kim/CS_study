메모리


메모리 계층
 왜? cpu가 메모리에 더빨리 접근할 수있게 하기 위해서
 왜2? 상황에 맞게 사용할수있도록 저렴하고 성능좋은 컴퓨터 설계

레지스터
cpu 내에 존재하는 장치, 명령을 하던가 데이터를 임시 보관하기위한 기억장치

개념: cpu가 요청을 처리하는 데 필요한 데이터를 일시적으로 저장하는 기억장치
기능: 컴퓨터의 4대 주요기능(기억,해석,연산,제어)를 관할하는 장치
위치: cpu 내부에 존재

----- 종류 ------
pc(프로그램 계수기): 다음 실행할 명령어 주소를 가지고있는 레지스터
ac(누산기): 연산 결과 데이터를 일시적으로 저장하는 레지스터
명령어 레지스터: 현재 수행중인 명령어를 가지고있는 레지스터
상태 레지스터: 현재 cpu의 상태를 가지고있는 레지스터
메모리 주소 레지스터: 메모리 부터 읽어오거나 메모리에 쓰기위한 주소를 가지고있는 레지스터
메모리 버퍼 레지스터: 메모리로 부터 읽어온 데이터또는 메모리에 써야할 데이터를 가지고있는 레지스터
입출력 주소 레지스터: 입출력 장치에 따른 입출력 모듈을 주소로 가지고있는 레지스터
입출력 버퍼 레지스터: 입출력 모듈과 프로세서 간의 데이터 교환을 위해 사용되는 레지스터


캐시
병목현상을 줄이기 위한 메모리이다. 매번 레지스터에서 메모리에있는것을 찾으려면 시간이 들기때문에 간극을 줄이기 위해서 캐시메모리를 사용한다.
개념: 사용했던 값은 다시사용할 가능성이 높기 때문에 다시사용될가능성이 높은 값을 빠른 저장소에 저장해놓는다.
기능: 속도가 빠른 장치와 느린 장치사이에서 속도차에 따른 병목 현상을 완화 하기위한 범용메모리
위치: cpu 내부에 존재

- 지역성의 원리 
동일한 값 또는 해당값에 관계된 스토리지 위치가 자주 엑세스 되는 특성
시간 지역성 vs 공간 지역성 (+ 순차 지역성)
시간 지역성 - 최근 사용한 데이터에 다시 접근하려는 특성
공간 지역성 - 초기에 접근한 데이터를 이루고 있는 공간이나 가까운 공간에 접근하는 특성을 말한다. 캐싱라인 이라고해서 공간지역성을 설명할수있다.
캐시가 아무리 프로세스를 빈번하게 사용한다고해도 데이터를 순회를 해야하기때문에 ,접근하는 곳에 가깝게 공간을 묶어버리면 지역성이 올라간다.


- 캐시 히트 와 캐시 미스

1. 캐시 적중 : CPU 가 원하는 데이터가 캐시에 있는 상태
2. 캐시 미스 : CPU가 원하는 데이터가 캐시에 없는 상태 주기억 장치로 부터 데이터를 읽어온다.

캐시 히트율 계산 
hit 수 /CPU 에 의한 메모리 참조수(주기억장치 포함)



- 캐시 매핑

개념: 캐시가 히트되기 위해 매핑하는 방법

1. 직접매핑: 메모리가 1~100 있고 ,캐시가 1~10 있다면 1: 1~10 2:11~20 적중률이 낮고 충돌 발생이 잦다.
2. 연관 매핑: 순서를 일치 시키지않고 캐시와 메모리를 매핑, 충돌이 적지만 모든 블록을 탐색시켜야된다. 적중률이 높다.
3.집합 연관 매핑 : 직접매핑+ 연관 매핑 순서는 일치시키지만 집합을 둬서 저장하며 블록화과 되어있기때문에 검색에 효율적
1~40의 데이터를 무작위로 저장하는것


- 웹브라우저의 캐시

-쿠키
key -value 형식
만료기한있음 , 4KB 까지 저장가능

-로컬 스토리지
key -value 형식 
10MB까지 저장가능 웹 브라우저 닫아도 유지 도메인 단위로 저장 생성 , 클라이언트에서만 수정가능


-세션 스토리지

key-value 
만료시간없음
브라우저를 닫을때 삭제되므로 쿠키보다 보안이 좋다.
5MB까지 저장가능
-데이터베이스의 캐싱 계층


어떤 유형의 데이터를 어디에 저장하면 좋을까?

입력 폼 정보 👉 세션 스토리지 
비로그인 장바구니 👉 세션 스토리지 
상세페이지에서 목록 페이지로 이동할 때 스크롤 위치 값 👉 세션 스토리지
자동 로그인 기능 👉 로컬 스토리지 
다크모드와 라이트모드 기능 👉 로컬 스토리지
다시 보지 않음 팝업 창 기능 👉 쿠키

저장장치


