프로세스
	메모리에 올라가있는 프로그램, 실행되고있는 프로그램을 의미한다.

스레드
	프로세스내의 작업의 흐름


프로세스와 컴파일 과정

프로세스는 프로그램이 인스턴스 화 된것을 말한다. '

전처리 -> 컴파일러-> 어셈블러 -> 링커

전처리 : 소스코드의 주석을 제거하고 #include 등의 헤더파일을 병합하여 매크로로 치환
컴파일러: 오류처리, 코드최적화후 어셈블리어로 변환
어셈블러: 어셈블리어는 목적코드로 변환됨	
링커:라이브러리 함수 또는 다른 파일들과 결합하여 실행 파일을 만든다.


정적라이브러리 vs 동적 라이브러리

정적라이브러리 모든코드를 실행파일을 넣는 방식 시스템 환경등 외부 의존도가 낮고 메모리 효율성이 떨어짐
동적라이브러리 실행시에만 필요할때만 DLL이라는 함수 정보를 통해 참조하는 방식 , 메모리 효율성에서의 장점과 외부 의존도가 높아짐


프로세스의 상태

생성상태: fork() exec()로 프로세스가 생성된 상태
fork() 부모프로세스의 주소공간만 복사 , 새로운 자식 생성 하지않는다.
exec(): 새롭게 프로세스를 생성

대기상태: 메모리공간이 충분하면 메모리를 할당받고 아니면 아닌상태로 대기

대기중단상태: 메모리 부족으로 일시 중단된 상태

실행상태: CPU 소유권과 메모리를 할당받고 인스트럭션을 수행중인상태

중단상태: 이벤트가 발생한 후 기다리며 프로세스가 차단된 상태

일시중단 상태: 대기중단과 비슷함 실행되려고했는데 메모리 부족으로 일시중단

종료상태: 메모리와 CPU 소유권을 모두 놓고가는 상태.

프로세스의 메모리구조

스택: 지역변수 매개변수, 함수가 저장되고 컴파일 시에 크기가 결정되며 동적인 특징
힙: 동적할당될때 사용되며 런타임시 크기가 결정됨, 동적배일,벡터가 예시

데이터영역: 전역변수,정적변수가 저장된다.
코드영역: 소스코드가 들어가있는 영역


PCB 이전 프로세스 작업에 대한 정보를 저장하고있는것