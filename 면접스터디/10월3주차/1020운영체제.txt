

공유자원 : 프로세스 스레드가 함께 접근할수있는 파일,데이터,메모리 등의 자원이나 변수를 뜻함

Race Condition:  두개이상의 프로세스나 스레드가 같은 자원에 접슨하는 상태

임계영역:  접근할때 순서가 바뀌면 결과값이 바뀌는 코드가 해당하는 영역을 임계영역이라고한다.
	해결안
	상호배제
	진행
	한정된대기


뮤텍스
	공유자원을 사용하기전에 설정하고 , 사용하면 해제하는 방식
	wait(), release() 함수를 통해서 처리가 된다.
	가장 간단한 동기화 도구이다. 화장실 열쇠라고 생각하면된다.
	Mutex의 단점으로 바쁜 대기를 해야한다는 단점이있다. 하지만 cpu코어가 여러개라면 유리하다.

세마포어
	열쇠 꾸러미라고 생각할수가있다. wait(), signal() 두가지의 함수로 구현한다.
	wait()가 사용 ,signal()이 반납
	바이너리 세마포어, 카운팅 세마포어로 나뉜다.
	바이너리 세마포어는 두가지만 가능하다.
	뮤텍스는 접근을 동기화, 바이너리 세마포어는 신호를 토대로 상호 배제가 일어난다.

	카운팅 세마포어
	
	리소스가 사용가능한 갯수로 초기화 해주는 것으로 구현한다.

모니터
	뮤텍스와 세마포어는 사용하기 어렵다.
	타이밍오류가 발생한다. wait() wait() 만 발생하거나 ,wait() signal() 순서를 바꾼다거나..
	
	둘이상의 스레드나 프로세스가 공유자원에 안전하게 접근할 수 있도록 공유 자원을 숨기고
	인터페이스만 지원해주는것, ex)큐를 사용하는것



데드락
	두개 이상의 프로세스들이 서로가 가진 자원을 기다리며 중단된 상태
	
데드락의 원인
	상호 배제: 한 프로세스가 자원을 독점하고 있으며, 다른 프로세스가 접근 불가
	점유대기: 특정 프로세스가 점유한 자원을 다른프로세스가 요청
	비선점: 다른 프로세스의 자원을 강제적으로 가져올수 없다
	순환 대기: 프로세스 A 는 프로세스B의 자원요구하고, 프로세스 B는 프로세스 A의 자원을 요구하는등 서로가서로를 요구하는 상황

데드락 해결방법
	자원 할당할떄 조건이 성립되지않도록 설계
	교착상태가능성이 없을때만 자원 할당되며, 은행원알고리즘을 써서 확인해보기
	교착상태가 발생하면 사이클 있는지 확인해보고 프로세스를 한개씩 지우기
	



