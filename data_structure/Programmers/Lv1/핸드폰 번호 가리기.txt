import java.lang.StringBuffer;

class Solution {
    public String solution(String phone_number) {
        StringBuffer sb = new StringBuffer();
        int s_len = phone_number.length();
        for (int i=0; i<s_len-4;i++){
            sb.append("*");
        }
        String number= phone_number.substring(s_len-4,s_len);
        sb.append(number);
        
        
        String answer = sb.toString();
        return answer;
    }
}

/**
	String
	StringBuffer
	StringBuilder의 차이

	String 객체는 한번 생성되면 할당된 메모리 공간이 바뀌지않는다. concat또는 + 연산자를 이용하면 새로운 문자열을 붙이는게아니라
	새로운 String 객체를 만들고 String 객체에 연결된 문자열을 저장하고 그 객체를 참조한다.
	String 객체는 문자열 연산이 많은 경우에 성능이 나쁘다


	StringBuffer 와 StringBuilder 는 String과 다르게 동작한다.
	문자열 연산으로 기존 객체의 공간이 부족해지면 버퍼의 크기를 늘린다.
	
	StringBuffer는 동기화 보장을 한다.멀티스레드에서 사용한다.(단일 스레드에서 사용하면 StringBuilder보다 성능이 안좋다.)
	StringBuilder는 동기화를 안한다. 단일스레드에서 많이 사용한다.


**/