import java.util.*;
class Paper{
    int idx;
    int value;
    
    public Paper(int idx,int value){
        this.idx= idx;
        this.value = value;
    }
    public int getIdx(){
        return this.idx;
    }
    public int getValue(){
        return this.value;
    }
    
}

class Solution {
    public int solution(int[] priorities, int location) {
        Deque<Paper> dq = new ArrayDeque<>();
        for (int i=0; i<priorities.length;i++){
            Paper paper = new Paper(i,priorities[i]);
            dq.add(paper);
        }
        int cnt=1;
        while (dq.isEmpty()==false){
            Paper now = dq.removeFirst();
            int nowValue= now.getValue();
            int nowIdx= now.getIdx();
            // System.out.println(nowIdx+"  " +nowValue);
            int maximum = -1;
            for (Paper p: dq){
                if (p.getValue()>maximum){
                    maximum=p.getValue();
                }
            }
            if (nowValue>=maximum){
                if (nowIdx == location){
                    return cnt;
                }
                cnt++;
            }else{
                dq.add(now);
            }
            
        }

        int answer = 0;
        return answer;
    }
}